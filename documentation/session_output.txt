  
Session Output Goals:

 1) Everything in the session output directory will be generated from the data collection program.  The user shouldn't have to manually add/organize anything.
 
 2) There's enough information that someone else can go back in time and reproduce the session using only the session output.
 
 3) There's enough information to fill the tables in the database.
 
 4) Makes sense for both moving and static platforms. 

The name of a session directory would be:
<platform type>_<platform id>_<utc start date>_<utc start time>/

Notes:
    - there's a question at the end about what we're currently doing with platform/sensor IDs. Since I'm not sure I've just used arbitrary IDs in this document
    - the date/time format is yyyyMMdd_hhmmss wich is what we're already using.

For example
phemu_153242325_20160223_124813/
 
The structure of the session directory would be:
 
data_logs/
data_files/
sensor_info/
version.txt
sensor_offsets.csv
session_info.csv
session_notes.txt
format.yaml
position.csv
orientation.csv (optional)

______________________________________
data_logs/
---------------------------
This directory would contain the CSV logs that recorded the textual data associated with each sensor.
Every sensor would have exactly 1 csv file in this directory.  If a sensor crashes / restarts during
a session then that data is appended to the original log file.  

The format for these files would be 
<sensor name>_<sensor id>_<start utc date>_<start utc time>.csv

For example for an IRT sensor it would be
irt1_23221113_20160223_124813.csv

For a camera sensor the csv file would contain the timestamp + image name.

______________________________________
data_files/
---------------------------
This directory contains all the files that aren't simple textual data.
For example images / binary files would go in here.

I was thinking we would have a subdirectory for each sensor that outputs data files. So if we had 1 kinect sensor and 2 DSLR cameras it would be something like

data_files/
    kinect1/
    cam1/
    cam2/
    
But I'm not so sure... I'd like some feedback. the pros/cons that come to mind are:

Pros of having subdirectories:
    - Easier to see which sensors produced (or are producing) output.
    - Easier to browse through different sensor outputs rather than scrolling through one large directory to find the start/end of each sensor.

Cons of having subdirectories:
    - Can't sort by time created and easily compare images taken from different sensors at similar times.
    - A little more complicated when syncing files between drives during a session.  For example between an internal and external drive.
        
The format for these files would be 
<sensor name>_<sensor id>_<utc date>_<utc time>_<milliseconds>_<stream (optional)>.<extension>
        
An example
kinect1_23422341_20160223_124813_232_color.jpg
        
______________________________________
sensor_info/
---------------------------
This directory contains 1 markup file for each sensor. This markup file would include all the information about the sensor from the run.  Things like
    - sensor name
    - sensor type
    - sensor id
    - any settings (e.g. capture rate, com port, baud rate, etc)
    - any text messages from the sensor driver
    - sensor offsets
    - standard deviations
    
The markup file for a sensor would also include metadata about the sensor type.  Things like
    - sensor driver version
    - any type of units (seconds, m/s, etc)
    - data types (float, int, etc)
    - min/max ranges 
    - descriptions of the settings / sensor output
    
______________________________________
version.txt
---------------------------
This file contains the current version number of the data collection program.

______________________________________
session_info.csv
---------------------------
Contains information about the entire session.  

platform_name: phemu
platform_id: 153242325
start_utc: 126234232
start_utc_human: 2/23/2016 15:23:13
end_utc: 126235232
end_utc_human: 2/23/2016 17:23:13
surveyed: true

______________________________________
session_notes.txt
---------------------------
The user would have a chance to type in text after they stop a session. For a moving platform something like

Covered east half of field.  Really sunny with occasional clouds.

______________________________________
format.yaml
---------------------------
This markup file contains metadata about the platform position/orientation sources.  It provides context about the format of the sensor_offets.csv, position.csv and orientation.csv files.  

An example would be something like:

offsets: 
    frame: flu # (forward-left-up)
    position_units: meters
    orientation_units: degrees
position:
    - sensor_name: bx982
        sensor_id: 1423412
        frame: UTM
        position_units: meters
        zone: hemisphere (could also be 'band')
        altitide: amsl
        std_dev: [0.01, 0.01, 0.03]
orientation:
    - sensor_name: bx982
        sensor_id: 1423412
        frame: enu # (east north up)
        units: degrees
        std_dev: [5, -1, 0.2]

This would allow us to have a script at the beginning of the database upload pipeline that converts everything into a standard format, which gets that job away from the user (which is a really good thing).  For example the user could provide 1, 2 or 3 position sources which would be converted into a single averaged position in a standard frame and optionally be used to calculate orientation.  We would start by supporting only the formats we're using and then can expand as the need arises.

______________________________________
sensor_offsets.csv
---------------------------
This file contains the relative offsets from the platform position/orientation. 

sensor_name  sensor_id   x   y   z    roll    pitch   yaw
   cam1      12032092   1.2  0  -.2    20       0     -90
   cam2      13034034  -1.2  0  -.2   -20       0      90
   
______________________________________
position.csv
---------------------------
The would contain the position of the platform during the run.  

An example for the husky would be
# utc_time       x           y        z      zone
19823432.234  123422.23   142334.32  123.3    14S

And on the Phemu in would be something like
# sensor id   utc_time       lat         long     alt  
  1423232    19823432.234  12322.23   143433.32  123.3 
  1423343    19823432.342  12321.23   143432.32  124.3 
  1423232    19823433.234  12322.43   143433.12  123.5 
  1423343    19823433.342  12321.43   143432.12  124.6 

______________________________________
orientation.csv
---------------------------
Similar to position.csv, but for platform orientation.
  
______________________________________
Questions: - these are things I need feedback on that don't belong elsewhere.
 
 1) Do we have a standard way of 
          - producing a unique ID for new sensors/platforms  
          - associating that ID with a type/model and serial number
          - making sure that association is in the database before we upload data
          - publishing the association somewhere it's easy for a typical user to find
          - attaching the ID to the platform/sensor
          
    I only ask because I've never seen a unique ID on any of the sensors and I've never messed with an ID for the Husky. If we've been using serial numbers I think we might want to get away from that.