class MainWindow

Has 3 main components
SensorViewer - interface to currently selected sensor
SensorSelecter - for now just a vertical layout of buttons with sensor names 
Menu - Replaces SensorViewer and shows options that apply to all sensors or application options (e.g. save sensor setup).

SensorViewer:

    Sensor type - drop down dialog
    Sensor name - text box
    Settings - generated from meta data (e.g. baud rate)
    Messages - Multi line text box.
    Standard Commands - Pause / Resume / Delete (delete should show a warning dialog yes/no)
    Special Commands - from meta data (e.g. trigger camera) (only here if there are special commands)

SensorSelector:

    Vertical layout of colored buttons with the name of the sensor on the button.
    
Menu:

    Main Setup Steps:
     1) Connect to Sensors -> this is what actually creates sensor threads/processes
     2) Start Data Collection -> start session
     3) Stop Data Collection -> end session
     4) Disconnect from Sensors -> destroys sensor threads/processes.
     
    Other Menu Options:
     - Load file - loads a new config file. If theres already sensors loaded should ask if want to append to them.
     - Save file - saves the current sensor settings to a file.
     - Pause All Sensors
     - Resume All Sensors
     - Add Sensor 
     - Select output directory - where to save the contents to 
     - Open output directory - in file explorer
    
Public Methods

    __init__(MainPresenter presenter)

    update_sensor(SensorClient sensor) - Check if already has a 'layout' for sensor id and if it doesn't it creates one.
                                         Then it goes through and loads name/type/settings.  Also update the name of the 
                                         selection button associated with sensor.
    
    show_sensor(int sensor_id) - Changes the 'SensorViewer' part of GUI to show 'layout' for corresponding sensor id. AND it calls self.presenter.set_active_sensor().
    
    append_sensor_message(sensor_id, message) - looks up layout associated with sensor ID and appends message to it's message center.
    
Public Fields

    SensorController controller

